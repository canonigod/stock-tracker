{"version":3,"sources":["constants.ts","reducer.ts","styled.tsx","Stocks.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GET_FINANCE_DATA_REQUEST","GET_FINANCE_DATA_SUCCESS","GET_FINANCE_DATA_FAILURE","initialState","data","isLoading","error","reducer","state","action","type","response","ContainerDiv","styled","div","Copy","p","Box","TickerName","CompanyNameStyle","PriceStyle","ValueNegative","ValuePositive","ArrowNegative","span","ArrowPositive","DividerTop","DividerRight","DivTextLeft","DivTextRight","OneThirdDiv","GrayText","SmallText","Button","button","InputField","input","numFormatter","num","i","si","value","symbol","length","toFixed","replace","priceChangeFun","num1","num2","Stocks","name","companyName","price","priceChange1","priceChange2","open","high","low","mktCap","peRatio","avgVolume","prevClose","wkHigh","wkLow","priceChange","Number","priceChangePercentage","className","Math","sign","icon","faArrowDown","faArrowUp","App","useState","ticker","setTicker","useReducer","dispatch","onChange","e","target","placeholder","onClick","url","axios","get","then","res","console","log","catch","loadData","animation","iexAskPrice","iexClose","previousClose","iexOpen","iexRealtimePrice","latestPrice","marketCap","avgTotalVolume","week52High","week52Low","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21558830.chunk.js","sourcesContent":["export const GET_FINANCE_DATA_REQUEST = 'GET_FINANCE_DATA_REQUEST';\nexport const GET_FINANCE_DATA_SUCCESS = 'GET_FINANCE_DATA_SUCCESS';\nexport const GET_FINANCE_DATA_FAILURE = 'GET_FINANCE_DATA_FAILURE';\n","import { GET_FINANCE_DATA_FAILURE, GET_FINANCE_DATA_REQUEST, GET_FINANCE_DATA_SUCCESS } from \"./constants\";\nimport { FetchActionTypes, ReducerState } from \"./types\";\n\n\nexport const initialState: ReducerState = {\n  data: null,\n  isLoading: false,\n  error: null,\n};\n\nexport function reducer(state = initialState, action: FetchActionTypes): ReducerState {\n  switch(action.type) {\n    case GET_FINANCE_DATA_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case GET_FINANCE_DATA_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        data: action.response\n      }\n    case GET_FINANCE_DATA_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.error\n      }\n    default:\n      return state;\n  }\n}\n","import styled from 'styled-components';\n\n/* Write all styled components here */\nexport const ContainerDiv = styled.div`\n    width: 100%;\n    position: absolute;\n    top: 20%;\n    text-align: center;\n`;\n\nexport const Copy = styled.p`\n    color: #bcb8b8;\n    font-weight: 300;\n    margin-top: 2rem;\n`;\n\nexport const Box = styled.div`\n    box-shadow: rgb(0,0,0,.2) 5px 5px 20px;\n    border-radius: 15px;\n    width: 42%;\n    height: auto;\n\n    @media (max-width: 1200px){\n        width: 60%;\n    } \n`\nexport const TickerName = styled.p`\n    font-size: 2rem;\n    text-align: left;\n    padding: 1rem 1rem 0;\n    font-weight: 700;\n    margin: 0;\n\n    @media (max-width: 767px){\n        text-align: center;\n    }\n`;\n\nexport const CompanyNameStyle = styled.p`\n    color: #999797;\n    text-align: left;\n    padding: 0 1rem 2rem;\n    font-size: 1rem;\n    margin:0;\n\n    @media (max-width: 767px){\n        padding: 0 1rem;\n        text-align: center;\n    }\n`;\n\nexport const PriceStyle = styled.p`\n    font-size: 2rem;\n    text-align: right;\n    padding: 1rem 1rem 0;\n    font-weight: 700;\n    margin: 0;\n\n    @media (max-width: 767px){\n        text-align: center;\n    }\n`\n\nexport const ValueNegative = styled.p`\n    text-align: right;\n    padding: 0 1rem 0;\n    color: #EB5757;\n\n    @media (max-width: 767px){\n        padding: 0;\n        font-size: 0.9rem;\n        text-align: center;\n    }\n`\n\nexport const ValuePositive = styled.p`\n    text-align: right;\n    padding: 0 1rem 0;\n    color: #27AE60;\n\n    @media (max-width: 767px){\n        padding: 0;\n        font-size: 0.9rem;\n        text-align: center;\n    }\n\n`\nexport const ArrowNegative = styled.span`\n    color: red;\n    font-size: 0.7rem;\n`\n\nexport const ArrowPositive = styled.span`\n    color: #27AE60;\n    font-size: 0.7rem;\n`\n\nexport const DividerTop = styled.div`\n    border-bottom: 1px solid rgba(174,174,174,.2);\n    width: 40.8%;\n    position: absolute;\n    top: 55%;\n    left: 29.7%;\n\n    @media (max-width: 767px){\n        display: none;\n    }\n\n    @media (min-width: 767px){\n        top: 55.5%;\n    }\n\n    @media (min-width: 767px) and (max-width:1200px){\n        width: 55%;\n        left: 22.7%;\n    }\n`\n\nexport const DividerRight = styled.div`\n    border-right: 1px solid rgba(174,174,174,.2);\n    height: 5rem;\n    width: 33%;\n    margin: 0;\n\n    @media (max-width: 767px){\n        height: 0;\n    }\n`\nexport const DivTextLeft = styled.div`\n    text-align: left;\n    @media (max-width: 991px){\n        text-align: center;\n        padding: 0 4px;\n    }\n`\n\nexport const DivTextRight = styled.div`\n    text-align: right ;\n\n    @media (max-width: 1200px){\n        text-align: center;\n        padding: 0;\n    }\n`\nexport const OneThirdDiv = styled.div`\n    width: 33%;\n    margin: 0\n`\n\nexport const GrayText = styled.p`\n    color: #888888;\n    font-size: .7rem;\n    \n`\n\nexport const SmallText = styled.p`\n    font-size: .7rem;\n\n    @media (max-width: 767px){\n        font-size: .6rem;\n    }\n\n    @media (max-width: 1200px){\n        padding: 0rem !important;\n    }\n`\n\nexport const Button = styled.button`\nbackground-color: #000;\ncolor: #fff;\nborder-radius: 50px;\nborder: none;\nmin-width: 5%;\ntext-transform: uppercase;\nfont-size: 1rem;\npadding: 10px 20px;\nmargin: 0 10px;\nfont-weight: 00;\n:hover{\n    background-color: #2e2e2e;\n}\n`;\n\nexport const InputField = styled.input`\nborder-radius: 50px;\nborder: 1px solid #bcb8b8;\npadding: 10px 15px;\noutline: none;\n`;\n\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Box, TickerName, CompanyNameStyle, PriceStyle, ValueNegative, ValuePositive, ArrowNegative, ArrowPositive, DividerTop, DividerRight, DivTextLeft, DivTextRight,  SmallText, GrayText, OneThirdDiv } from './styled'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowDown, faArrowUp } from '@fortawesome/free-solid-svg-icons'\n\nconst numFormatter = (num: number) => { // Formatting number to display if it's thousands, millions, billions, etc...\n    let si = [\n      { value: 1, symbol: \"\" },\n      { value: 1E3, symbol: \"K\" },\n      { value: 1E6, symbol: \"M\" },\n      { value: 1E9, symbol: \"B\" },\n      { value: 1E12, symbol: \"T\" },\n      { value: 1E15, symbol: \"P\" },\n      { value: 1E18, symbol: \"E\" }\n    ];\n    let rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n    let i;\n    for (i = si.length - 1; i > 0; i--) {\n      if (num >= si[i].value) {\n        break;\n      }\n    }\n    return (num / si[i].value).toFixed(2).replace(rx, \"$1\") + si[i].symbol;\n  }\n\n  interface StockProps { // Stock Props\n    name: string, \n    companyName: string, \n    price: number, \n    priceChange1: number, \n    priceChange2: number, \n    open: number, \n    high: number, \n    low: number, \n    mktCap: number, \n    peRatio: number, \n    avgVolume: number, \n    prevClose: number, \n    wkHigh: number, \n    wkLow: number\n  }\n\n  const priceChangeFun = (num1: number, num2: number) => { \n      // Function to get the stock price change using today's close and yesterday's close amounts\n    return (num1 - num2).toFixed(2)\n  }\n\n  const percentagePriceChange = ( num1: number, num2: number) => { \n      // Function to get the stock price change using today's close and yesterday's close amounts in percentage\n      let priceChangeValue: any = priceChangeFun(num1, num2)\n      let percentageValue = ((priceChangeValue / num2) * 100).toFixed(2)\n      return percentageValue\n  }\n\nconst Stocks = ({name, companyName, price, priceChange1, priceChange2, open, high, low, mktCap, peRatio, avgVolume, prevClose, wkHigh, wkLow, ...props}: StockProps) => {\n    let priceChange = Number(priceChangeFun(priceChange1, priceChange2)) // Assigning the Price Change to a variable\n    let priceChangePercentage = percentagePriceChange(priceChange1, priceChange2) // Assigning the Price Change Percentage to a variable\n\n    return (\n        <div>\n            <Box className=\"container my-4\">\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <TickerName>{name}</TickerName>\n                        <CompanyNameStyle>{companyName}</CompanyNameStyle>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <PriceStyle>{price}</PriceStyle>\n                        {\n                            Math.sign(priceChange) === -1\n                            ? <ValueNegative>\n                                {priceChange}\n                                <span className=\"px-1\">{'(' + priceChangePercentage +'%)'}</span>\n                                <ArrowNegative><FontAwesomeIcon icon={faArrowDown}/></ArrowNegative>\n                                </ValueNegative>\n\n                            : <ValuePositive>\n                            {'+' + priceChange}\n                            <span className=\"px-1\">{'(' + priceChangePercentage +'%)'}</span>\n                            <ArrowPositive><FontAwesomeIcon icon={faArrowUp}/></ArrowPositive>\n                            </ValuePositive>\n                        }\n                    </div>\n                    <DividerTop></DividerTop>\n                    <DividerRight className=\"row\">\n                        <DivTextLeft className=\"col-md-8\">\n                            <SmallText>Open</SmallText>\n                            <SmallText>High</SmallText>\n                            <SmallText>Low</SmallText>\n                        </DivTextLeft>\n                        <DivTextRight className=\"col-md-4\">\n                            <GrayText>{open}</GrayText>\n                            <GrayText>{high}</GrayText>\n                            <GrayText>{low}</GrayText>\n                        </DivTextRight>                      \n                    </DividerRight>\n                    <DividerRight className=\"row\">\n                        <DivTextLeft className=\"col-md-8\">\n                            <SmallText>Mkt Cap</SmallText>\n                            <SmallText>P/E Ratio</SmallText>\n                            <SmallText>Avg. Volume</SmallText>\n                        </DivTextLeft>\n                        <DivTextRight className=\"col-md-4\">\n                            <GrayText>{numFormatter(mktCap)}</GrayText>\n                            <GrayText>{peRatio}</GrayText>\n                            <GrayText>{numFormatter(avgVolume)}</GrayText>\n                        </DivTextRight>                      \n                    </DividerRight>\n                    <OneThirdDiv className=\"row\">\n                        <DivTextLeft className=\"col-md-8\">\n                            <SmallText>Prev Close</SmallText>\n                            <SmallText>52-wk high</SmallText>\n                            <SmallText>52-wk low</SmallText>\n                        </DivTextLeft>\n                        <DivTextRight className=\"col-md-4\">\n                            <GrayText>{prevClose}</GrayText>\n                            <GrayText>{wkHigh}</GrayText>\n                            <GrayText>{wkLow}</GrayText>\n                        </DivTextRight>\n                    </OneThirdDiv>\n                </div>\n            </Box>\n        </div>\n    )\n}\n\nexport default Stocks;","import React, { ChangeEvent, useState, useReducer } from 'react';\n// import { getFinanceDataFailure, getFinanceDataRequest, getFinanceDataSuccess } from './actions';\nimport { GET_FINANCE_DATA_FAILURE, GET_FINANCE_DATA_REQUEST, GET_FINANCE_DATA_SUCCESS } from \"./constants\";\nimport { reducer, initialState } from './reducer';\nimport { Button, InputField, ContainerDiv, Copy} from './styled'\nimport * as ReactBootStrap from 'react-bootstrap'\nimport axios from 'axios'\nimport Stocks from './Stocks';\n\nconst App = () => {\n  const [ticker, setTicker] = useState('');\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  function loadData() {\n    /* Make a GET request to IEX Cloud API */\n    const url = `https://sandbox.iexapis.com/stable/stock/${ticker}/quote?token=Tsk_678b4f8a0c3b4032b11c7568fb24dc17`;\n    dispatch({ type: GET_FINANCE_DATA_REQUEST });\n    axios.get(url)\n      .then(res => {\n        setTicker('');\n        console.log(res.data)\n        dispatch({ type: GET_FINANCE_DATA_SUCCESS, response: res.data });\n        console.log(res.data)\n      }).catch(error => {\n        dispatch({ type: GET_FINANCE_DATA_FAILURE, error });\n      })  \n  }\n  \n// Grabbing input value\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    setTicker(value);\n  }\n\n// Calling the API upon button click\n  const handleSearchClick = () => {\n    loadData();\n  }\n\n  return (\n    <div className=\"App\">\n      <ContainerDiv>\n        <InputField\n          type=\"text\"\n          onChange={handleInputChange}\n          value={ticker}\n          placeholder=\"Stock Ticker\"\n        />\n        <Button\n          type=\"button\"\n          onClick={handleSearchClick}\n        >\n          Search\n        </Button>\n        {\n          state.isLoading\n          ? <ReactBootStrap.Spinner animation=\"border\" /> // Displaying spinner while data is being loaded\n\n          : state.error\n              ? <Copy>Invalid Ticker Symbol.</Copy> // Displaying error message if stock ticker is invalid\n\n              : !state.data\n                ? <Copy>Search stock by Ticker Symbol.</Copy>\n\n                :  <Stocks \n                    name={state.data.symbol}\n                    companyName={state.data.companyName}\n                    price={state.data.iexAskPrice}\n                    priceChange1={state.data.iexClose}\n                    priceChange2={state.data.previousClose}\n                    open={state.data.iexOpen}\n                    high={state.data.iexRealtimePrice}\n                    low={state.data.latestPrice}\n                    mktCap={state.data.marketCap}\n                    peRatio={state.data.peRatio}\n                    avgVolume={state.data.avgTotalVolume} \n                    prevClose={state.data.previousClose}\n                    wkHigh={state.data.week52High} \n                    wkLow={state.data.week52Low}\n                  />            \n        }\n      </ContainerDiv>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n  }\n`;\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}